# ログイン API テスト
desc: ユーザーログイン機能のテスト

# 設定
runners:
  apitest:
    endpoint: http://localhost:8080

# テスト前準備（テストユーザーの作成）
runs:
  - desc: テストユーザーを作成
    req:
      /api/authentication/signup:
        post:
          headers:
            Content-Type: application/json
          body:
            application/json:
              email: test-login@example.com
              password: Test123!
    test: |
      current.res.status >= 200 && current.res.status < 300

  # 正常系: 有効な認証情報でログイン
  - desc: 正常なログイン
    req:
      /api/authentication/login:
        post:
          headers:
            Content-Type: application/json
          body:
            application/json:
              email: test-login@example.com
              password: Test123!
    test: |
      current.res.status == 200
    dump:
      - current.res.body.token
      - current.res.body

  # 異常系: 無効なパスワード
  - desc: 無効なパスワードでのログイン
    req:
      /api/authentication/login:
        post:
          headers:
            Content-Type: application/json
          body:
            application/json:
              email: test-login@example.com
              password: WrongPassword!
    test: |
      current.res.status == 401

  # 異常系: 存在しないユーザー
  - desc: 存在しないユーザーでのログイン
    req:
      /api/authentication/login:
        post:
          headers:
            Content-Type: application/json
          body:
            application/json:
              email: nonexistent@example.com
              password: Test123!
    test: |
      current.res.status == 401

  # 異常系: 無効なメールアドレス形式
  - desc: 無効なメールアドレス形式でのログイン
    req:
      /api/authentication/login:
        post:
          headers:
            Content-Type: application/json
          body:
            application/json:
              email: invalid-email
              password: Test123!
    test: |
      current.res.status == 400

  # 異常系: 必須フィールドが欠けている
  - desc: メールアドレスなしでのログイン
    req:
      /api/authentication/login:
        post:
          headers:
            Content-Type: application/json
          body:
            application/json:
              password: Test123!
    test: |
      current.res.status == 400

  - desc: パスワードなしでのログイン
    req:
      /api/authentication/login:
        post:
          headers:
            Content-Type: application/json
          body:
            application/json:
              email: test-login@example.com
    test: |
      current.res.status == 400

  # 異常系: 空のボディ
  - desc: 空のボディでのログイン
    req:
      /api/authentication/login:
        post:
          headers:
            Content-Type: application/json
          body:
            application/json: {}
    test: |
      current.res.status == 400