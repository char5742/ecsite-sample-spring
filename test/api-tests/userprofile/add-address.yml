# 住所追加 API テスト
desc: ユーザープロファイルに住所を追加する機能のテスト

# 設定
runners:
  apitest:
    endpoint: http://localhost:8080

# テスト変数
vars:
  timestamp: '{{ now | unixtime }}'
  testEmail: 'test-address-{{ vars.timestamp }}@example.com'
  testPassword: 'Test123!'

# テスト実行
runs:
  # テストユーザーを作成
  - desc: テストユーザーを作成
    req:
      /api/authentication/signup:
        post:
          headers:
            Content-Type: application/json
          body:
            application/json:
              email: '{{ vars.testEmail }}'
              password: '{{ vars.testPassword }}'
    test: |
      current.res.status == 200
  
  # ログインしてトークンを取得
  - desc: ログインしてトークンを取得
    req:
      /api/authentication/login:
        post:
          headers:
            Content-Type: application/json
          body:
            application/json:
              email: '{{ vars.testEmail }}'
              password: '{{ vars.testPassword }}'
    test: |
      current.res.status == 200
    bind:
      authToken: current.res.body.token
      accountId: current.res.body.accountId
  
  # プロファイルを作成
  - desc: プロファイルを作成
    req:
      /api/userprofiles:
        post:
          headers:
            Content-Type: application/json
            Authorization: 'Bearer {{ runs[1].authToken }}'
          body:
            application/json:
              accountId: '{{ runs[1].accountId }}'
              name: 'テストユーザー'
    test: |
      current.res.status == 201
    bind:
      profileId: current.res.body.id

  # 正常系: 住所を追加
  - desc: 住所を追加
    req:
      /api/userprofiles/{{ runs[2].profileId }}/addresses:
        post:
          headers:
            Content-Type: application/json
            Authorization: 'Bearer {{ runs[1].authToken }}'
          body:
            application/json:
              label: '自宅'
              postalCode: '100-0001'
              prefecture: '東京都'
              city: '千代田区'
              town: '千代田'
              street: '1-1-1'
              building: 'テストビル101'
              phoneNumber: '03-1234-5678'
              recipientName: 'テスト受取人'
    test: |
      current.res.status == 201
    bind:
      addressId: current.res.body.id

  # 正常系: 複数の住所を追加
  - desc: 勤務先住所を追加
    req:
      /api/userprofiles/{{ runs[2].profileId }}/addresses:
        post:
          headers:
            Content-Type: application/json
            Authorization: 'Bearer {{ runs[1].authToken }}'
          body:
            application/json:
              label: '勤務先'
              postalCode: '160-0022'
              prefecture: '東京都'
              city: '新宿区'
              town: '新宿'
              street: '2-2-2'
              building: 'オフィスビル'
              phoneNumber: '03-9876-5432'
              recipientName: '会社受取'
    test: |
      current.res.status == 201

  # 正常系: 住所一覧取得
  - desc: 住所一覧を取得
    req:
      /api/userprofiles/{{ runs[2].profileId }}/addresses:
        get:
          headers:
            Authorization: 'Bearer {{ runs[1].authToken }}'
    test: |
      current.res.status == 200 && current.res.body.length() == 2

  # 異常系: 無効な郵便番号
  - desc: 無効な郵便番号で失敗
    req:
      /api/userprofiles/{{ runs[2].profileId }}/addresses:
        post:
          headers:
            Content-Type: application/json
            Authorization: 'Bearer {{ runs[1].authToken }}'
          body:
            application/json:
              label: '無効な住所'
              postalCode: 'invalid'
              prefecture: '東京都'
              city: '千代田区'
              town: '千代田'
              street: '1-1-1'
    test: |
      current.res.status == 400

  # 異常系: 必須フィールド不足
  - desc: 必須フィールド不足で失敗
    req:
      /api/userprofiles/{{ runs[2].profileId }}/addresses:
        post:
          headers:
            Content-Type: application/json
            Authorization: 'Bearer {{ runs[1].authToken }}'
          body:
            application/json:
              label: '不完全な住所'
              postalCode: '100-0001'
    test: |
      current.res.status == 400

  # 異常系: 認証なしでのアクセス
  - desc: 認証なしでアクセス
    req:
      /api/userprofiles/{{ runs[2].profileId }}/addresses:
        post:
          headers:
            Content-Type: application/json
          body:
            application/json:
              label: '認証なし'
              postalCode: '100-0001'
              prefecture: '東京都'
              city: '千代田区'
              town: '千代田'
              street: '1-1-1'
    test: |
      current.res.status == 401

  # 異常系: 存在しないプロファイル
  - desc: 存在しないプロファイルへの追加
    req:
      /api/userprofiles/non-existent-profile/addresses:
        post:
          headers:
            Content-Type: application/json
            Authorization: 'Bearer {{ runs[1].authToken }}'
          body:
            application/json:
              label: '存在しないプロファイル'
              postalCode: '100-0001'
              prefecture: '東京都'
              city: '千代田区'
              town: '千代田'
              street: '1-1-1'
    test: |
      current.res.status == 404